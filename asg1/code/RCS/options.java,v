head	1.33;
access;
symbols;
locks;
comment	@# @;


1.33
date	2014.04.15.15.40.16;	author -;	state -;
branches;
next	1.32;

1.32
date	2014.04.15.15.39.10;	author -;	state -;
branches;
next	1.31;

1.31
date	2014.04.15.15.26.44;	author -;	state -;
branches;
next	1.30;

1.30
date	2014.04.15.15.25.38;	author -;	state -;
branches;
next	1.29;

1.29
date	2014.04.15.08.07.36;	author -;	state -;
branches;
next	1.28;

1.28
date	2014.04.15.07.19.44;	author -;	state -;
branches;
next	1.27;

1.27
date	2014.04.15.07.06.43;	author -;	state -;
branches;
next	1.26;

1.26
date	2014.04.15.07.04.25;	author -;	state -;
branches;
next	1.25;

1.25
date	2014.04.15.01.56.19;	author -;	state -;
branches;
next	1.24;

1.24
date	2014.04.15.01.34.47;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.04.15.01.34.02;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.04.15.01.30.30;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.04.15.01.28.58;	author -;	state -;
branches;
next	1.20;

1.20
date	2014.04.15.01.08.56;	author -;	state -;
branches;
next	1.19;

1.19
date	2014.04.15.01.07.32;	author -;	state -;
branches;
next	1.18;

1.18
date	2014.04.15.00.54.01;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.04.15.00.48.31;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.04.15.00.38.00;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.04.15.00.37.07;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.04.15.00.28.22;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.04.15.00.23.36;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.04.15.00.22.39;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.04.11.21.02.34;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.04.11.20.48.43;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.04.11.20.43.14;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.04.10.23.18.22;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.04.10.22.46.06;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.04.10.22.31.17;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.04.10.22.22.24;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.04.10.21.21.44;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.04.09.23.40.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.04.08.00.25.28;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.04.08.00.23.20;	author -;	state -;
branches;
next	;


desc
@@


1.33
log
@-
@
text
@// $Id: options.java,v 1.28 2014-04-15 00:19:44-07 - - $

import static java.lang.System.*;

class options {
   boolean insensitive = false;
   boolean filename_only = false;
   boolean number_lines = false;
   boolean reverse_match = false;
   boolean correctSyntax = false;
   String regex;
   String[] filenames;
   int hasOption = 0;

   options (String[] args) {
      if (args.length == 0) { 
         err.printf ("Usage: %s [-ilnv] regex [filename...]%n",
                     messages.program_name);
         exit (messages.EXIT_FAILURE);
      }
      else if (args[0].startsWith("-")){
         if(args[0].contains("i")){
            insensitive = true;
            hasOption = 1;
            correctSyntax = true;
         }
         else if (args[0].contains("l")){
            filename_only = true;
            hasOption = 1;
            correctSyntax = true;
         }
         else if (args[0].contains("n")){
            number_lines = true;
            hasOption = 1;
            correctSyntax = true;
         }
         else if (args[0].contains("v")){
            reverse_match = true;
            hasOption = 1;
            correctSyntax = true;
         }
         else{
            correctSyntax = false;
         }
         if (correctSyntax = false) {
            err.printf ("Usage: %s [-ilnv] regex [filename...]%n",
                        messages.program_name);
            exit (messages.EXIT_SYNTAX_ERROR);
         }
         regex = args[1];
         filenames = new String[args.length - 1];
         for (int argi = 2; argi < args.length; ++argi) {
            filenames[argi - 1] = args[argi];
         }
      }
      else if (!args[0].contains("-")){
         hasOption = 0;
         regex = args[0];
         filenames = new String[args.length - 1];
         for (int argi = 1; argi < args.length; ++argi) {
            filenames[argi - 1] = args[argi];
         }  
      }
   }
}

@


1.32
log
@-
@
text
@d45 1
a45 1
         if (correctSyntax = false;) {
@


1.31
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.30 2014-04-15 08:25:38-07 - - $
d10 1
a10 1
   boolean hasCorrectSyntax = false;
a23 1
            hasCorrectSyntax = true;
d25 1
d27 1
a27 1
         if (args[0].contains("l")){
a28 1
            hasCorrectSyntax = true;
d30 1
d32 1
a32 1
         if (args[0].contains("n")){
a33 1
            hasCorrectSyntax = true;
d35 1
d37 1
a37 1
         if (args[0].contains("v")){
a38 1
            hasCorrectSyntax = true;
d40 1
d42 4
a45 1
         if (hasCorrectSyntax == false){
@


1.30
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.29 2014-04-15 01:07:36-07 - - $
d42 1
a42 1
         else if (hasCorrectSyntax == false){
@


1.29
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.28 2014-04-15 00:19:44-07 - - $
d10 1
d24 1
d29 1
d34 1
d39 1
d42 1
a42 2
         else if (!args[0].contains("i") && !args[0].contains("l")
                  && !args[0].contains("n") && !args[0].contains("v")){
@


1.28
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.25 2014/04/15 01:56:19 - - $
a9 1
   boolean correctSyntax = true;
d37 2
a38 2
         else if (!args[0].contains("i") && !args[0].contains("l") && !args[0].contains("n") && !args[0].contains("v")){
            correctSyntax = false;
d42 1
a42 1
         }                                                             // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
@


1.27
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.25 2014-04-14 18:56:19-07 - - $
d21 23
a43 1
                                               // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
a57 22
      else {
         for(int argi = 0; pos<args[0].length(); argi++){
            switch(args[0].charAt(pos)){
               case '-':;
               break;
               case ' ':;
               break;
               case 'i': insensitive=true;
               break;
               case 'l': filename_only=true;
               break;
               case 'n': number_lines=true;
               break;
               case 'v': reverse_match=true;
               break;
               default:       
                  err.printf("Usage: %s [-ilnv] regex [filename...]%n",
                             messages.program_name);
                  messages.die();
            }
         }
      }
@


1.26
log
@-
@
text
@d21 1
a21 20
      for(int argi = 0; pos<args[0].length(); argi++){
         switch(args[0].charAt(pos)){
            case '-':;
            break;
            case ' ':;
            break;
            case 'i': insensitive=true;
            break;
            case 'l': filename_only=true;
            break;
            case 'n': number_lines=true;
            break;
            case 'v': reverse_match=true;
            break;
            default:       
               err.printf("Usage: %s [-ilnv] regex [filename...]%n",
                          messages.program_name);
               messages.die();
         }
      }                                         // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
d36 22
@


1.25
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.11 2014-04-11 14:02:34-07 - - $
d21 18
a38 4
      else if (args[0].startsWith("-")){
         if(args[0].contains("i")){
            insensitive = true;
            hasOption = 1;
d40 1
a40 18
         if (args[0].contains("l")){
            filename_only = true;
            hasOption = 1;
         }
         if (args[0].contains("n")){
            number_lines = true;
            hasOption = 1;
         }
         if (args[0].contains("v")){
            reverse_match = true;
            hasOption = 1;
         }
         else if (!args[0].contains("i") && !args[0].contains("l") && !args[0].contains("n") && !args[0].contains("v")){
            correctSyntax = false;
            err.printf ("Usage: %s [-ilnv] regex [filename...]%n",
                        messages.program_name);
            exit (messages.EXIT_SYNTAX_ERROR);
         }                                                             // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
@


1.24
log
@-
@
text
@d10 1
d21 1
a21 1
      else if (args[0].startsWith("-")){                               // change back to if (blah)?
d39 1
@


1.23
log
@-
@
text
@d37 1
a37 1
         else if (!args[0].contains("i") && !args[0].contains("i") && !args[0].contains("i") && !args[0].contains("i") && !args[0].contains("i")){
@


1.22
log
@-
@
text
@d37 1
a37 1
         /*else{
d41 1
a41 1
         } */                                                             // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
@


1.21
log
@-
@
text
@d37 1
a37 1
         else{
d41 1
a41 1
         }                                                              // EDIT THIS TO WORK WITH THE SPECIFIC PARTS OF MESSAGES.JAVA ASSOCIATED WITH IT
@


1.20
log
@-
@
text
@d12 1
d23 1
d27 1
d31 1
d35 1
d49 1
@


1.19
log
@-
@
text
@d43 1
a43 1
      else if (args[0].charAt(0) != "-"){
@


1.18
log
@-
@
text
@d43 1
a43 1
      else{
d45 2
a46 2
         filenames = new String[args.length];
         for (int argi = 1; argi < args.length - 1; ++argi) {
@


1.17
log
@-
@
text
@d46 1
a46 1
         for (int argi = 1; argi < args.length; ++argi) {
@


1.16
log
@-
@
text
@d45 1
a45 1
         filenames = new String[args.length - 1];
d47 1
a47 1
            filenames[argi - 2] = args[argi];
@


1.15
log
@-
@
text
@d46 2
a47 2
         for (int argi = 1; argi < args.length; argi++) {
            filenames[argi - 1] = args[argi];
@


1.14
log
@-
@
text
@d19 1
a19 1
      if (args[0].startsWith("-")){
d21 1
a21 1
               insensitive = true;
d23 2
a24 2
         if(args[0].contains("l")){
               filename_only = true;
d26 2
a27 2
         if(args[0].contains("n")){
               number_lines = true;
d29 2
a30 2
         if(args[0].contains("v")){
               reverse_match = true;
d32 5
d46 1
a46 1
         for (int argi = 1; argi < args.length - 1; ++argi) {
@


1.13
log
@-
@
text
@d41 2
a42 2
         for (int argi = 1; argi < args.length; ++argi) {
            filenames[argi] = args[argi];
@


1.12
log
@-
@
text
@d41 2
a42 2
         for (int argi = 2; argi < args.length; ++argi) {
            filenames[argi - 1] = args[argi];
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.8 2014-04-10 16:18:22-07 - - $
d41 1
a41 1
         for (int argi = 1; argi < args.length; ++argi) {
@


1.10
log
@-
@
text
@d33 4
@


1.9
log
@-
@
text
@d32 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.5 2014-04-10 15:22:24-07 - - $
d10 1
a10 1
   String regex;                  // ok not to initialize?
@


1.7
log
@-
@
text
@a18 5
      regex = args[0];
      filenames = new String[args.length - 1];
      for (int argi = 1; argi < args.length; ++argi) {
         filenames[argi - 1] = args[argi];
      }
d34 6
a39 4
         err.printf ("Usage: %s [-ilnv] regex [filename...]%n",
                     messages.program_name);
         exit (messages.EXIT_FAILURE);
      }  
@


1.6
log
@-
@
text
@d24 2
a25 6
      if (regex.beginsWith("-")){
         if (regex.charAt(1) == "i" ||
             regex.charAt(2) == "i" ||
             regex.charAt(3) == "i" ||
             regex.charAt(4) == "i" )
         {
d28 1
a28 5
         if (regex.charAt(1) == "l" ||
             regex.charAt(2) == "l" ||
             regex.charAt(3) == "l" ||
             regex.charAt(4) == "l" )
         {
d31 1
a31 5
         if (regex.charAt(1) == "n" ||
             regex.charAt(2) == "n" ||
             regex.charAt(3) == "n" ||
             regex.charAt(4) == "n" )
         {
d34 1
a34 5
         if (regex.charAt(1) == "v" ||
             regex.charAt(2) == "v" ||
             regex.charAt(3) == "v" || 
             regex.charAt(4) == "v" )
         {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.4 2014-04-10 14:21:44-07 - - $
d25 4
a28 4
         if (regex.charAt(1) = "i" ||
             regex.charAt(2) = "i" ||
             regex.charAt(3) = "i" ||
             regex.charAt(4) = "i" ||)
d32 4
a35 4
         if (regex.charAt(1) = "l" ||
             regex.charAt(2) = "l" ||
             regex.charAt(3) = "l" ||
             regex.charAt(4) = "l" ||)
d39 4
a42 4
         if (regex.charAt(1) = "n" ||
             regex.charAt(2) = "n" ||
             regex.charAt(3) = "n" ||
             regex.charAt(4) = "n" ||)
d46 4
a49 4
         if (regex.charAt(1) = "v" ||
             regex.charAt(2) = "v" ||
             regex.charAt(3) = "v" ||
             regex.charAt(4) = "v" ||)
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.3 2014-04-09 16:40:32-07 - - $
d25 4
a28 3
         if (regex.charAt(1) == "i" ||
             regex.charAt(2) == "i" ||
             regex.charAt(3) == "i" ||)
d32 4
a35 3
         if (regex.charAt(1) == "l" ||
             regex.charAt(2) == "l" ||
             regex.charAt(3) == "l" ||)
d39 4
a42 3
         if (regex.charAt(1) == "n" ||
             regex.charAt(2) == "n" ||
             regex.charAt(3) == "n" ||)
d46 4
a49 3
         if (regex.charAt(1) == "v" ||
             regex.charAt(2) == "v" ||
             regex.charAt(3) == "v" ||)
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: options.java,v 1.2 2014-04-02 21:30:12-07 - - $
d6 5
a10 5
   boolean insensitive;
   boolean filename_only;
   boolean number_lines;
   boolean reverse_match;
   String regex;
@


1.2
log
@-
@
text
@d24 6
a29 3
      for (argi = 1; argi < args.length; ++argi) {
         if (args = "i") {
            insensitive = true;
d31 5
a35 2
         else if (args = "l"){
            filename_only = true;
d37 5
a41 2
         else if (args = "n") {
            number_lines = true;
d43 5
a47 2
         else if (args = "v") {
            reverse_match = true;
d50 5
@


1.1
log
@-
@
text
@d24 14
@
