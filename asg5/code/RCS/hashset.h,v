head	1.4;
access;
symbols;
locks;
comment	@ * @;


1.4
date	2014.06.07.11.18.23;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.06.07.10.46.36;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.06.07.10.16.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.06.06.08.32.45;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// Brad Cardello (bcardell)
// Kara Ekiss (kekiss)
// $Id: hashset.h,v 1.3 2014-06-07 03:46:36-07 - - $

#ifndef __HASHSET_H__
#define __HASHSET_H__

#include <stdbool.h>

typedef struct hashset hashset;

//
// Create a new hashset with a default number of elements.
//
hashset *new_hashset (void);

//
// Frees the hashset, and the words it points at.
//
void free_hashset (hashset*);

//
// Inserts a new string into the hashset.
//
void put_hashset (hashset*, const char*);

//
// Looks up the string in the hashset and returns true if found,
// false if not found.
//
bool has_hashset (hashset*, const char*);

void double_hashset (hashset*);
void chain_count (hashset*, int);
void debug_dump (hashset*, int);


#endif

@


1.3
log
@-
@
text
@d2 2
a3 1
// $Id: hashset.h,v 1.2 2014-06-07 03:16:24-07 - - $
@


1.2
log
@-
@
text
@d1 2
a2 1
// $Id: hashset.h,v 1.1 2014-06-06 01:32:45-07 - - $
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hashset.h,v 1.3 2014-03-05 19:24:07-08 - - $
d31 5
@
